{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fmodern\fcharset0 Courier;\f2\fnil\fcharset0 Consolas;
\f3\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red17\green66\blue105;
\red150\green205\blue208;\red46\green84\blue88;\red67\green67\blue67;\red227\green235\blue236;\red213\green232\blue234;
\red115\green134\blue137;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c6667\c33333\c48627;
\cssrgb\c64706\c83922\c85098;\cssrgb\c23137\c40000\c41961;\cssrgb\c33333\c33333\c33333;\cssrgb\c90980\c93725\c94118;\cssrgb\c86667\c92549\c93333;
\cssrgb\c52549\c59608\c60784;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl860\sa216\partightenfactor0

\f0\fs72 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 NameError\
\pard\pardeftab720\li260\sl320\sa160\partightenfactor0

\f1\fs28 \cf2 NameError: name 'a_contest' is not defined\
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs32 \cf3 \cb4 \strokec3 Traceback\'a0\cf5 \strokec5 (most recent call last)\cf3 \strokec3 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\sa26\partightenfactor0
\ls1\ilvl0
\fs26 \cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 File\'a0\cf6 \strokec6 "/usr/local/lib/python3.7/site-packages/flask/app.py"\cf2 \strokec2 , line\'a02463, in\'a0
\f2\fs28 __call__
\f0\fs26 \uc0\u8232 
\f2\fs28 \cf7 \cb3 \strokec7 return self.wsgi_app(environ, start_response)\uc0\u8232 
\f0\fs30 \cf2 \cb1 \strokec2 \uc0\u8232 \u8232 \
\ls1\ilvl0
\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 File\'a0\cf6 \strokec6 "/usr/local/lib/python3.7/site-packages/flask/app.py"\cf2 \strokec2 , line\'a02449, in\'a0
\f2\fs28 wsgi_app
\f0\fs26 \uc0\u8232 
\f2\fs28 \cf7 \cb3 \strokec7 response = self.handle_exception(e)\uc0\u8232 
\f0\fs30 \cf2 \cb1 \strokec2 \uc0\u8232 \u8232 \
\ls1\ilvl0
\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 File\'a0\cf6 \strokec6 "/usr/local/lib/python3.7/site-packages/flask/app.py"\cf2 \strokec2 , line\'a01866, in\'a0
\f2\fs28 handle_exception
\f0\fs26 \uc0\u8232 
\f2\fs28 \cf7 \cb3 \strokec7 reraise(exc_type, exc_value, tb)\uc0\u8232 
\f0\fs30 \cf2 \cb1 \strokec2 \uc0\u8232 \u8232 \
\ls1\ilvl0
\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 File\'a0\cf6 \strokec6 "/usr/local/lib/python3.7/site-packages/flask/_compat.py"\cf2 \strokec2 , line\'a039, in\'a0
\f2\fs28 reraise
\f0\fs26 \uc0\u8232 
\f2\fs28 \cf7 \cb3 \strokec7 raise value\uc0\u8232 
\f0\fs30 \cf2 \cb1 \strokec2 \uc0\u8232 \u8232 \
\ls1\ilvl0
\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 File\'a0\cf6 \strokec6 "/usr/local/lib/python3.7/site-packages/flask/app.py"\cf2 \strokec2 , line\'a02446, in\'a0
\f2\fs28 wsgi_app
\f0\fs26 \uc0\u8232 
\f2\fs28 \cf7 \cb3 \strokec7 response = self.full_dispatch_request()\uc0\u8232 
\f0\fs30 \cf2 \cb1 \strokec2 \uc0\u8232 \u8232 \
\ls1\ilvl0
\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 File\'a0\cf6 \strokec6 "/usr/local/lib/python3.7/site-packages/flask/app.py"\cf2 \strokec2 , line\'a01951, in\'a0
\f2\fs28 full_dispatch_request
\f0\fs26 \uc0\u8232 
\f2\fs28 \cf7 \cb3 \strokec7 rv = self.handle_user_exception(e)\uc0\u8232 
\f0\fs30 \cf2 \cb1 \strokec2 \uc0\u8232 \u8232 \
\ls1\ilvl0
\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 File\'a0\cf6 \strokec6 "/usr/local/lib/python3.7/site-packages/flask/app.py"\cf2 \strokec2 , line\'a01820, in\'a0
\f2\fs28 handle_user_exception
\f0\fs26 \uc0\u8232 
\f2\fs28 \cf7 \cb3 \strokec7 reraise(exc_type, exc_value, tb)\uc0\u8232 
\f0\fs30 \cf2 \cb1 \strokec2 \uc0\u8232 \u8232 \
\ls1\ilvl0
\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 File\'a0\cf6 \strokec6 "/usr/local/lib/python3.7/site-packages/flask/_compat.py"\cf2 \strokec2 , line\'a039, in\'a0
\f2\fs28 reraise
\f0\fs26 \uc0\u8232 
\f2\fs28 \cf7 \cb3 \strokec7 raise value\uc0\u8232 
\f0\fs30 \cf2 \cb1 \strokec2 \uc0\u8232 \u8232 \
\ls1\ilvl0
\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 File\'a0\cf6 \strokec6 "/usr/local/lib/python3.7/site-packages/flask/app.py"\cf2 \strokec2 , line\'a01949, in\'a0
\f2\fs28 full_dispatch_request
\f0\fs26 \uc0\u8232 
\f2\fs28 \cf7 \cb3 \strokec7 rv = self.dispatch_request()\uc0\u8232 
\f0\fs30 \cf2 \cb1 \strokec2 \uc0\u8232 \u8232 \
\ls1\ilvl0
\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 File\'a0\cf6 \strokec6 "/usr/local/lib/python3.7/site-packages/flask/app.py"\cf2 \strokec2 , line\'a01935, in\'a0
\f2\fs28 dispatch_request
\f0\fs26 \uc0\u8232 
\f2\fs28 \cf7 \cb3 \strokec7 return self.view_functions[rule.endpoint](**req.view_args)\uc0\u8232 
\f0\fs30 \cf2 \cb1 \strokec2 \uc0\u8232 \u8232 \
\ls1\ilvl0
\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 File\'a0\cf6 \strokec6 "/code/app.py"\cf2 \strokec2 , line\'a0173, in\'a0
\f2\fs28 analyze
\f0\fs26 \uc0\u8232 
\f2\fs28 \cb8 for item in a_contest[1:]:\uc0\u8232 \cb9 [console ready]>>> help(pd.DataFrame.pivot)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl340\sa200\partightenfactor0
\ls1\ilvl0
\f0 \cf3 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Help on function pivot in module pandas.core.frame:\uc0\u8232 
\f2 \cf2 \cb3 \strokec2 pivot(self, index=None, columns=None, values=None)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     Return reshaped DataFrame organized by given index / column values.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     Reshape data (produce a "pivot" table) based on column values. Uses\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     unique values from specified `index` / `columns` to form axes of the\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     resulting DataFrame. This function does not support data\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     aggregation, multiple values will result in a MultiIndex in the\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     columns. See the :ref:`User Guide <reshaping>` for more on reshaping.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     Parameters\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     ----------\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     index : string or object, optional\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         Column to use to make new frame's index. If None, uses\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         existing index.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     columns : string or object\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         Column to use to make new frame's columns.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     values : string, object or a list of the previous, optional\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         Column(s) to use for populating new frame's values. If not\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         specified, all remaining columns will be used and the result will\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         have hierarchically indexed columns.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         .. versionchanged :: 0.23.0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2            Also accept list of column names.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     Returns\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     -------\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     DataFrame\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         Returns reshaped DataFrame.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     Raises\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     ------\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     ValueError:\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         When there are any `index`, `columns` combinations with multiple\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         values. `DataFrame.pivot_table` when you need to aggregate.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     See Also\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     --------\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     DataFrame.pivot_table : Generalization of pivot that can handle\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         duplicate values for one index/column pair.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     DataFrame.unstack : Pivot based on the index values instead of a\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         column.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     Notes\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     -----\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     For finer-tuned control, see hierarchical indexing documentation along\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     with the related stack/unstack methods.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     Examples\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     --------\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     >>> df = pd.DataFrame(\{'foo': ['one', 'one', 'one', 'two', 'two',\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     ...                            'two'],\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     ...                    'bar': ['A', 'B', 'C', 'A', 'B', 'C'],\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     ...                    'baz': [1, 2, 3, 4, 5, 6],\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     ...                    'zoo': ['x', 'y', 'z', 'q', 'w', 't']\})\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     >>> df\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2         foo   bar  baz  zoo\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     0   one   A    1    x\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     1   one   B    2    y\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     2   one   C    3    z\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     3   two   A    4    q\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     4   two   B    5    w\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     5   two   C    6    t\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     >>> df.pivot(index='foo', columns='bar', values='baz')\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     bar  A   B   C\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     foo\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     one  1   2   3\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     two  4   5   6\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     >>> df.pivot(index='foo', columns='bar')['baz']\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     bar  A   B   C\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     foo\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     one  1   2   3\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     two  4   5   6\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     >>> df.pivot(index='foo', columns='bar', values=['baz', 'zoo'])\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2           baz       zoo\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     bar   A  B  C   A  B  C\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     foo\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     one   1  2  3   x  y  z\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     two   4  5  6   q  w  t\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     A ValueError is raised if there are any duplicates.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     >>> df = pd.DataFrame(\{"foo": ['one', 'one', 'two', 'two'],\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     ...                    "bar": ['A', 'A', 'B', 'C'],\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     ...                    "baz": [1, 2, 3, 4]\})\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     >>> df\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2        foo bar  baz\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     0  one   A    1\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     1  one   A    2\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     2  two   B    3\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     3  two   C    4\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     Notice that the first two rows are the same for our `index`\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     and `columns` arguments.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     >>> df.pivot(index='foo', columns='bar', values='baz')\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     Traceback (most recent call last):\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2        ...\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     ValueError: Index contains duplicate entries, cannot reshape\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 
\f0 \cb1 \uc0\u8232 
\f2 \uc0\u8232 \u8232 \cf7 \cb9 \strokec7 >>> \cb1 \uc0\u8232 \cf2 \cb9 \strokec2 \uc0\u8232 
\f0\fs30 \cb1 \uc0\u8232 \u8232 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 NameError: name 'a_contest' is not defined\
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \strokec7 The debugger caught an exception in your WSGI application. You can now look at the traceback which led to the error.\
\pard\pardeftab720\sl360\sa300\partightenfactor0
\cf7 To switch between the interactive traceback and the plaintext one, you can click on the "Traceback" headline. From the text traceback you can also create a paste of it. For code execution mouse-over the frame you want to debug and click on the console icon on the right side.\
You can execute arbitrary Python code in the stack frames and there are some extra helpers available for introspection:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls2\ilvl0
\f2\fs28 \cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 dump()
\f0\fs30 \'a0shows all variables in the frame\
\ls2\ilvl0
\f2\fs28 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 dump(obj)
\f0\fs30 \'a0dumps all that's known about the object\
\pard\pardeftab720\sl320\qr\partightenfactor0

\fs26 \cf10 \strokec10 Brought to you by\'a0
\f3\b DON'T PANIC
\f0\b0 , your friendly Werkzeug powered traceback interpreter.\
}